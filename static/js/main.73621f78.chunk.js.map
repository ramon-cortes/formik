{"version":3,"sources":["App.js","index.js"],"names":["App","formik","useFormik","initialValues","email","password","onSubmit","values","console","log","alert","validate","errors","test","handleSubmit","name","id","type","onChange","handleChange","value","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAmDeA,MA/Cf,WAEE,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRC,QAAQC,IAAI,gBAAiBF,GAC7BG,MAAM,mBACR,EACAC,SAAU,SAAAJ,GACR,IAAIK,EAAS,CAAC,EASd,OARKL,EAAOH,MAIA,4CAA4CS,KAAKN,EAAOH,SAClEQ,EAAOR,MAAQ,+BAJfQ,EAAOR,MAAQ,iBAMZG,EAAOF,WAAUO,EAAOP,SAAW,kBACjCO,CACT,IAGF,OACE,gCACE,uCACA,sBAGA,8BACA,uBAAMN,SAAUL,EAAOa,aAAa,UAClC,wCACA,uBAAOC,KAAK,QAAQC,GAAG,aAAaC,KAAK,OAAOC,SAAUjB,EAAOkB,aAAcC,MAAOnB,EAAOM,OAAOH,QACnGH,EAAOW,OAAOR,MAAQ,qBAAKY,GAAG,aAAaK,UAAU,QAAO,SAAEpB,EAAOW,OAAOR,QAAe,KAC5F,2CACA,uBAAOW,KAAK,WAAWC,GAAG,WAAWC,KAAK,OAAOC,SAAUjB,EAAOkB,aAAcC,MAAOnB,EAAOM,OAAOF,WACpGJ,EAAOW,OAAOP,SAAW,qBAAKW,GAAG,WAAWK,UAAU,QAAO,SAAEpB,EAAOW,OAAOP,WAAkB,KAChG,sBACA,wBAAQW,GAAG,YAAYC,KAAK,SAAQ,2BAK5C,EC7CAK,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.73621f78.chunk.js","sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport {useFormik} from 'formik';\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      console.log('Form values: ', values);\n      alert('Login Successful');\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = 'field required';\n        //RegEx copied from https://formik.org/docs/guides/validation\n        //                   â†“\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'username should be an email';\n      }\n      if (!values.password) errors.password = 'field required';\n      return errors;\n    }\n  });\n\n  return (\n    <div>\n      <h3>Login</h3>\n      <p>\n        {/* TODO: build you form here. */}        \n      </p>\n      <div>\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input name='email' id=\"emailField\" type='text' onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div id=\"emailError\" className='error'>{formik.errors.email}</div> : null}\n        <div>Password</div>\n        <input name='password' id=\"pswField\" type='text' onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.password ? <div id=\"pswError\" className='error'>{formik.errors.password}</div> : null}\n        <p/>\n        <button id=\"submitBtn\" type='submit'>Submit</button>\n      </form>\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}